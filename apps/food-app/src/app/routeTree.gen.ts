/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './router/__root'
import { Route as AuthImport } from './router/_auth'

// Create Virtual Routes

const SignInLazyImport = createFileRoute('/sign-in')()
const AuthIndexLazyImport = createFileRoute('/_auth/')()
const AuthIngredientsLazyImport = createFileRoute('/_auth/ingredients')()

// Create/Update Routes

const SignInLazyRoute = SignInLazyImport.update({
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./router/sign-in.lazy').then((d) => d.Route))

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexLazyRoute = AuthIndexLazyImport.update({
  path: '/',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./router/_auth.index.lazy').then((d) => d.Route))

const AuthIngredientsLazyRoute = AuthIngredientsLazyImport.update({
  path: '/ingredients',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./router/_auth.ingredients.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/sign-in': {
      preLoaderRoute: typeof SignInLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth/ingredients': {
      preLoaderRoute: typeof AuthIngredientsLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/': {
      preLoaderRoute: typeof AuthIndexLazyImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  AuthRoute.addChildren([AuthIngredientsLazyRoute, AuthIndexLazyRoute]),
  SignInLazyRoute,
])

/* prettier-ignore-end */
